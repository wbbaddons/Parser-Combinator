{"version":3,"sources":["../../../../src/lib/standard/markdown/markdown-parser.js"],"names":["mdLine","try","title","or","codeLine","bullet","formattedParagraph","lineFeed","document","rep","map","item","array","parseLine","line","parse","ofString","stream","offset"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,MAAT,GAAkB;AACd,WAAO,SAAEC,GAAF,CAAM,sBAAYC,KAAZ,EAAN,EACFC,EADE,CACC,SAAEF,GAAF,CAAM,yBAAgBG,QAAhB,EAAN,CADD,EAEFD,EAFE,CAEC,SAAEF,GAAF,CAAM,uBAAaI,MAAb,EAAN,CAFD,EAGFF,EAHE,CAGC,SAAEF,GAAF,CAAM,qBAAWK,kBAAX,EAAN,CAHD,EAIFH,EAJE,CAIC,gBAAEI,QAAF,EAJD,CAAP;AAKH,C,CAlBD;;;;AAoBA,SAASC,QAAT,GAAoB;AAChB,WAAOR,SAASS,GAAT,GAAeC,GAAf,CAAmB;AAAA,eAAQC,KAAKC,KAAL,EAAR;AAAA,KAAnB,CAAP;AACH;;AAED,SAASC,UAAT,CAAmBC,IAAnB,EAAyB;AACrB,WAAOd,SAASe,KAAT,CAAe,gBAAOC,QAAP,CAAgBF,IAAhB,CAAf,EAAsC,CAAtC,CAAP;AACH;;kBAEc;AACXd,kBADW;;AAGXa,aAHW,qBAGDC,IAHC,EAGK;AACZ,eAAOD,WAAUC,IAAV,EAAgB,CAAhB,CAAP;AACH,KALU;AAOXC,SAPW,iBAOLE,MAPK,EAOGC,MAPH,EAOW;AAClB,eAAOV,WAAWO,KAAX,CAAiBE,MAAjB,EAAyBC,MAAzB,CAAP;AACH;AATU,C","file":"markdown-parser.js","sourcesContent":["/**\r\n * Created by Simon on 16/12/2016.\r\n */\r\n\r\nimport {F} from '../../parsec/index';\r\nimport stream from '../../stream/index';\r\nimport T from './token';\r\nimport TextParser from './text-parser';\r\nimport TitleParser from './title-parser';\r\nimport BulletParser from './bullet-parser';\r\nimport codeBlockParser from './code-line-parser';\r\n\r\nfunction mdLine() {\r\n    return F.try(TitleParser.title())\r\n        .or(F.try(codeBlockParser.codeLine()))\r\n        .or(F.try(BulletParser.bullet()))\r\n        .or(F.try(TextParser.formattedParagraph()))\r\n        .or(T.lineFeed());\r\n}\r\n\r\nfunction document() {\r\n    return mdLine().rep().map(item => item.array());\r\n}\r\n\r\nfunction parseLine(line) {\r\n    return mdLine().parse(stream.ofString(line), 0);\r\n}\r\n\r\nexport default {\r\n    mdLine,\r\n\r\n    parseLine(line) {\r\n        return parseLine(line, 0);\r\n    },\r\n\r\n    parse(stream, offset) {\r\n        return document().parse(stream, offset);\r\n    },\r\n};\r\n"]}