{"version":3,"sources":["../../../src/lib/stream/stringstream.js"],"names":["StringStream","source","index","length","charAt","factory"],"mappings":";;;;;;;;AAOA;;;;;;;;;;+eAPA;;;;;;;;;AASA;;;IAGMA,Y;;;AACF,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB,cAAKA,MAAL,GAAcA,MAAd;AAFgB;AAGnB;;AAED;;;;;oCACYC,K,EAAO;AACf,mBAAO,KAAKD,MAAL,CAAYE,MAAZ,IAAsBD,KAA7B;AACH;;AAED;;;;kCACUA,K,EAAO;AACb,mBAAO,KAAKD,MAAL,CAAYG,MAAZ,CAAmBF,KAAnB,CAAP;AACH;;;;;;AAGL,SAASG,OAAT,CAAiBJ,MAAjB,EAAyB;AACrB,WAAO,IAAID,YAAJ,CAAiBC,MAAjB,CAAP;AACH;;kBAEcI,O","file":"stringstream.js","sourcesContent":["/*\r\n * Parsec\r\n * https://github.com/d-plaindoux/parsec\r\n *\r\n * Copyright (c) 2016 Didier Plaindoux\r\n * Licensed under the LGPL2 license.\r\n */\r\nimport Stream from './stream';\r\n\r\n/**\r\n * String stream class\r\n */\r\nclass StringStream extends Stream {\r\n    constructor(source) {\r\n        super();\r\n        this.source = source;\r\n    }\r\n\r\n    // StringStream 'a => unit -> boolean\r\n    endOfStream(index) {\r\n        return this.source.length <= index;\r\n    }\r\n\r\n    // StringStream 'a => number -> 'a <+> error\r\n    unsafeGet(index) {\r\n        return this.source.charAt(index);\r\n    }\r\n}\r\n\r\nfunction factory(source) {\r\n    return new StringStream(source);\r\n}\r\n\r\nexport default factory;\r\n"]}