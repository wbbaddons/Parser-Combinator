{"version":3,"sources":["../../../src/test/parsec/parser_core_test.js"],"names":["setUp","done","test","expect","equal","char","map","a","parse","ofString","isAccepted","value","st","combinator","integer","thenLeft","then","values","flatmap","returns","filter","match","deepEqual","drop","concat","thenRight","thenReturns","or","consumed","opt","get","isPresent","rep","array","optrep","notChar","r","e","original","console","log","sideEffect","debug"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;kBAoBe;AACXA,WAAO,eAASC,IAAT,EAAe;AAClBA;AACH,KAHU;;AAKX,mCAA+B,+BAASC,IAAT,EAAe;AAC1CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKC,GADL,CACS,UAASC,CAAT,EAAY;AACb,mBAAOA,IAAI,GAAX;AACH,SAHL,EAIKC,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,IAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KAnBU;;AAqBX,mCAA+B,+BAASC,IAAT,EAAe;AAC1CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKC,GADL,CACS,UAASC,CAAT,EAAY;AACb,mBAAOA,IAAI,GAAX;AACH,SAHL,EAIKC,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,KAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KAnCU;;AAqCX,oCAAgC,+BAASC,IAAT,EAAe;AAC3CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKC,GADL,CACS,UAASC,CAAT,EAAY;AACb,mBAAOA,IAAI,GAAX;AACH,SAHL,EAIKC,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAIoCE,KALxC,EAMI,IANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KAlDU;;AAoDX,qCAAiC,gCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;;AAEA,YAAMS,KAAK,gBAAOH,QAAP,CAAgB,KAAhB,CAAX;AACA,YAAMI,aAAa,UAAEC,OAAF,CACdC,QADc,CACL,UAAEV,IAAF,CAAO,GAAP,CADK,EAEdW,IAFc,CAET,UAAEF,OAFO,EAGdR,GAHc,CAGV;AAAA,mBAAUW,OAAO,CAAP,IAAYA,OAAO,CAAP,CAAtB;AAAA,SAHU,CAAnB;;AAKAf,aAAKE,KAAL,CAAWS,WAAWL,KAAX,CAAiBI,EAAjB,EAAqBD,KAAhC,EAAuC,EAAvC,EAA2C,qBAA3C;AACAT,aAAKD,IAAL;AACH,KA/DU;;AAiEX,uCAAmC,mCAASC,IAAT,EAAe;AAC9CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKa,OADL,CACa,YAAW;AAChB,mBAAO,UAAEC,OAAF,CAAU,GAAV,CAAP;AACH,SAHL,EAIKX,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,IAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KA/EU;;AAiFX,wCAAoC,mCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKa,OADL,CACa,YAAW;AAChB,mBAAO,UAAEC,OAAF,CAAU,GAAV,CAAP;AACH,SAHL,EAIKX,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,KAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KA/FU;;AAiGX,wCAAoC,mCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKa,OADL,CACa,YAAW;AAChB,mBAAO,UAAEb,IAAF,CAAO,GAAP,CAAP;AACH,SAHL,EAIKG,KAJL,CAIW,gBAAOC,QAAP,CAAgB,IAAhB,CAJX,EAIkC,CAJlC,EAIqCE,KALzC,EAMI,GANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KA9GU;;AAgHX,sCAAkC,kCAASC,IAAT,EAAe;AAC7CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKe,MADL,CACY,UAASb,CAAT,EAAY;AAChB,mBAAOA,MAAM,GAAb;AACH,SAHL,EAIKC,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,IAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KA9HU;;AAgIX,sCAAkC,kCAASC,IAAT,EAAe;AAC7CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKe,MADL,CACY,UAASb,CAAT,EAAY;AAChB,mBAAOA,MAAM,GAAb;AACH,SAHL,EAIKC,KAJL,CAIW,gBAAOC,QAAP,CAAgB,GAAhB,CAJX,EAIiC,CAJjC,EAKKC,UALL,EADJ,EAOI,KAPJ,EAQI,qBARJ;AAUAR,aAAKD,IAAL;AACH,KA9IU;;AAgJX,qCAAiC,iCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EAAYgB,KAAZ,CAAkB,GAAlB,EAAuBb,KAAvB,CAA6B,gBAAOC,QAAP,CAAgB,GAAhB,CAA7B,EAAmD,CAAnD,EAAsDC,UAAtD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KAzJU;;AA2JX,qCAAiC,iCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EAAYgB,KAAZ,CAAkB,GAAlB,EAAuBb,KAAvB,CAA6B,gBAAOC,QAAP,CAAgB,GAAhB,CAA7B,EAAmD,CAAnD,EAAsDC,UAAtD,EADJ,EAEI,KAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KApKU;;AAsKX,oCAAgC,gCAASC,IAAT,EAAe;AAC3CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAlLU;;AAoLX,yCAAqC,oCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAhMU;;AAkMX,0CAAsC,qCAASC,IAAT,EAAe;AACjDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KA9MU;;AAgNX,qCAAiC,8BAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYW,IAAZ,CAAiB,UAAEX,IAAF,CAAO,GAAP,CAAjB,EAA8BG,KAA9B,CAAoC,gBAAOC,QAAP,CAAgB,IAAhB,CAApC,EAA2D,CAA3D,EAA8DE,KADlE,EAEI,CAAC,GAAD,EAAM,GAAN,CAFJ,EAGI,qBAHJ;AAKAT,aAAKD,IAAL;AACH,KA1NU;;AA4NX,uCAAmC,+BAASC,IAAT,EAAe;AAC9CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,EAAYW,IAAZ,CAAiB,UAAEX,IAAF,CAAO,GAAP,EAAYkB,IAAZ,EAAjB,EAAqCP,IAArC,CAA0C,UAAEX,IAAF,CAAO,GAAP,CAA1C,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,MAAhB,CAFX,EAEoC,CAFpC,EAEuCE,KAH3C,EAII,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJJ,EAKI,qBALJ;AAOAT,aAAKD,IAAL;AACH,KAxOU;;AA0OX,wCAAoC,mCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,CADV,EAEKW,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,EAAYkB,IAAZ,EAFV,EAGKP,IAHL,CAGU,UAAEX,IAAF,CAAO,GAAP,CAHV,EAIKG,KAJL,CAIW,gBAAOC,QAAP,CAAgB,MAAhB,CAJX,EAIoC,CAJpC,EAIuCE,KAL3C,EAMI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KAxPU;;AA0PX,+CAA2C,wCAASC,IAAT,EAAe;AACtDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACKmB,MADL,CACY,UAAEnB,IAAF,CAAO,GAAP,CADZ,EAEKW,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,EAAYkB,IAAZ,EAFV,EAGKC,MAHL,CAGY,UAAEnB,IAAF,CAAO,GAAP,CAHZ,EAIKG,KAJL,CAIW,gBAAOC,QAAP,CAAgB,MAAhB,CAJX,EAIoC,CAJpC,EAIuCE,KAL3C,EAMI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KAxQU;;AA0QX,wCAAoC,oCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKU,QADL,CACc,UAAEV,IAAF,CAAO,GAAP,CADd,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAtRU;;AAwRX,qCAAiC,iCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYU,QAAZ,CAAqB,UAAEV,IAAF,CAAO,GAAP,CAArB,EAAkCG,KAAlC,CAAwC,gBAAOC,QAAP,CAAgB,IAAhB,CAAxC,EAA+D,CAA/D,EACKE,KAFT,EAGI,GAHJ,EAII,qBAJJ;AAMAT,aAAKD,IAAL;AACH,KAlSU;;AAoSX,wCAAoC,oCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKU,QADL,CACc,UAAEV,IAAF,CAAO,GAAP,CADd,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,GAAhB,CAFX,EAEiC,CAFjC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAhTU;;AAkTX,yCAAqC,qCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKoB,SADL,CACe,UAAEpB,IAAF,CAAO,GAAP,CADf,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KA9TU;;AAgUX,sCAAkC,kCAASC,IAAT,EAAe;AAC7CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYoB,SAAZ,CAAsB,UAAEpB,IAAF,CAAO,GAAP,CAAtB,EAAmCG,KAAnC,CAAyC,gBAAOC,QAAP,CAAgB,IAAhB,CAAzC,EAAgE,CAAhE,EACKE,KAFT,EAGI,GAHJ,EAII,qBAJJ;AAMAT,aAAKD,IAAL;AACH,KA1UU;;AA4UX,yCAAqC,qCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKoB,SADL,CACe,UAAEpB,IAAF,CAAO,GAAP,CADf,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,GAAhB,CAFX,EAEiC,CAFjC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAxVU;;AA0VX,yCAAqC,oCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKkB,IADL,GAEKP,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,CAFV,EAGKG,KAHL,CAGW,gBAAOC,QAAP,CAAgB,IAAhB,CAHX,EAGkC,CAHlC,EAIKC,UAJL,EADJ,EAMI,IANJ,EAOI,qBAPJ;AASAR,aAAKD,IAAL;AACH,KAvWU;;AAyWX,yCAAqC,mCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EAAYkB,IAAZ,GAAmBP,IAAnB,CAAwB,UAAEX,IAAF,CAAO,GAAP,CAAxB,EAAqCG,KAArC,CAA2C,gBAAOC,QAAP,CAAgB,IAAhB,CAA3C,EAAkE,CAAlE,EACKE,KAFT,EAGI,GAHJ,EAII,qBAJJ;AAMAT,aAAKD,IAAL;AACH,KAnXU;;AAqXX,yCAAqC,oCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,EAAYkB,IAAZ,EADV,EAEKf,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAjYU;;AAmYX,yCAAqC,mCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EAAYW,IAAZ,CAAiB,UAAEX,IAAF,CAAO,GAAP,EAAYkB,IAAZ,EAAjB,EAAqCf,KAArC,CAA2C,gBAAOC,QAAP,CAAgB,IAAhB,CAA3C,EAAkE,CAAlE,EACKE,KAFT,EAGI,GAHJ,EAII,qBAJJ;AAMAT,aAAKD,IAAL;AACH,KA7YU;;AA+YX,2CAAuC,uCAASC,IAAT,EAAe;AAClDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKqB,WADL,CACiB,GADjB,EAEKlB,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KA3ZU;;AA6ZX,wCAAoC,oCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EAAYqB,WAAZ,CAAwB,GAAxB,EAA6BlB,KAA7B,CAAmC,gBAAOC,QAAP,CAAgB,IAAhB,CAAnC,EAA0D,CAA1D,EAA6DE,KADjE,EAEI,GAFJ,EAGI,qBAHJ;AAKAT,aAAKD,IAAL;AACH,KAtaU;;AAwaX,4CAAwC,uCAASC,IAAT,EAAe;AACnDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACKqB,WADL,CACiB,GADjB,EAEKV,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,CAFV,EAGKG,KAHL,CAGW,gBAAOC,QAAP,CAAgB,IAAhB,CAHX,EAGkC,CAHlC,EAGqCE,KAJzC,EAKI,CAAC,GAAD,EAAM,GAAN,CALJ,EAMI,qBANJ;AAQAT,aAAKD,IAAL;AACH,KApbU;;AAsbX,2CAAuC,uCAASC,IAAT,EAAe;AAClDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKqB,WADL,CACiB,GADjB,EAEKlB,KAFL,CAEW,gBAAOC,QAAP,CAAgB,GAAhB,CAFX,EAEiC,CAFjC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAlcU;;AAocX,kCAA8B,8BAASC,IAAT,EAAe;AACzCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKsB,EADL,CACQ,UAAEtB,IAAF,CAAO,GAAP,CADR,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,GAAhB,CAFX,EAEiC,CAFjC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAhdU;;AAkdX,kCAA8B,8BAASC,IAAT,EAAe;AACzCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKsB,EADL,CACQ,UAAEtB,IAAF,CAAO,GAAP,CADR,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,GAAhB,CAFX,EAEiC,CAFjC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KA9dU;;AAgeX,wCAAoC,iCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,CADV,EAEKsB,EAFL,CAEQ,UAAEtB,IAAF,CAAO,GAAP,CAFR,EAGKG,KAHL,CAGW,gBAAOC,QAAP,CAAgB,IAAhB,CAHX,EAGkC,CAHlC,EAIKC,UAJL,EADJ,EAMI,KANJ,EAOI,qBAPJ;AASAR,aAAKD,IAAL;AACH,KA7eU;;AA+eX,+BAA2B,2BAASC,IAAT,EAAe;AACtCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYsB,EAAZ,CAAe,UAAEtB,IAAF,CAAO,GAAP,CAAf,EAA4BG,KAA5B,CAAkC,gBAAOC,QAAP,CAAgB,GAAhB,CAAlC,EAAwD,CAAxD,EAA2DE,KAD/D,EAEI,GAFJ,EAGI,qBAHJ;AAKAT,aAAKD,IAAL;AACH,KAxfU;;AA0fX,+BAA2B,2BAASC,IAAT,EAAe;AACtCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYsB,EAAZ,CAAe,UAAEtB,IAAF,CAAO,GAAP,CAAf,EAA4BG,KAA5B,CAAkC,gBAAOC,QAAP,CAAgB,GAAhB,CAAlC,EAAwD,CAAxD,EAA2DE,KAD/D,EAEI,GAFJ,EAGI,qBAHJ;AAKAT,aAAKD,IAAL;AACH,KAngBU;;AAqgBX,4CAAwC,sCAASC,IAAT,EAAe;AACnDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,EAAYsB,EAAZ,CAAe,UAAEtB,IAAF,CAAO,GAAP,CAAf,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAGKC,UAHL,EADJ,EAKI,KALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KAjhBU;;AAmhBX,4CAAwC,sCAASC,IAAT,EAAe;AACnDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,IAAF,CAAO,GAAP,EACKW,IADL,CACU,UAAEX,IAAF,CAAO,GAAP,EAAYsB,EAAZ,CAAe,UAAEtB,IAAF,CAAO,GAAP,CAAf,CADV,EAEKG,KAFL,CAEW,gBAAOC,QAAP,CAAgB,IAAhB,CAFX,EAEkC,CAFlC,EAEqCmB,QAHzC,EAII,IAJJ,EAKI,qBALJ;AAOA1B,aAAKD,IAAL;AACH,KA9hBU;;AAgiBX,qCAAiC,iCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYwB,GAAZ,GAAkBrB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDC,UAAjD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KAziBU;;AA2iBX,0CAAsC,oCAASC,IAAT,EAAe;AACjDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYwB,GAAZ,GAAkBrB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDE,KAAjD,CAAuDmB,GAAvD,EADJ,EAEI,GAFJ,EAGI,cAHJ;AAKA5B,aAAKD,IAAL;AACH,KApjBU;;AAsjBX,qCAAiC,iCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYwB,GAAZ,GAAkBrB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDC,UAAjD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KA/jBU;;AAikBX,wCAAoC,mCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAYwB,GAAZ,GAAkBrB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDE,KAAjD,CAAuDoB,SAAvD,EADJ,EAEI,KAFJ,EAGI,8BAHJ;AAKA7B,aAAKD,IAAL;AACH,KA1kBU;;AA4kBX,gCAA4B,6BAASC,IAAT,EAAe;AACvCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY2B,GAAZ,GAAkBxB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDC,UAAjD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KArlBU;;AAulBX,gCAA4B,6BAASC,IAAT,EAAe;AACvCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY2B,GAAZ,GAAkBxB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C,CAA9C,EAAiDC,UAAjD,EADJ,EAEI,KAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KAhmBU;;AAkmBX,wCAAoC,oCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY2B,GAAZ,GAAkBxB,KAAlB,CAAwB,gBAAOC,QAAP,CAAgB,SAAhB,CAAxB,EAAoD,CAApD,EAAuDC,UAAvD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KA3mBU;;AA6mBX,gDAA4C,sCAASC,IAAT,EAAe;AACvDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACK2B,GADL,GAEKxB,KAFL,CAEW,gBAAOC,QAAP,CAAgB,SAAhB,CAFX,EAEuC,CAFvC,EAGKE,KAHL,CAGWsB,KAHX,EADJ,EAKI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CALJ,EAMI,qBANJ;AAQA/B,aAAKD,IAAL;AACH,KAznBU;;AA2nBX,mCAA+B,gCAASC,IAAT,EAAe;AAC1CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY6B,MAAZ,GAAqB1B,KAArB,CAA2B,gBAAOC,QAAP,CAAgB,GAAhB,CAA3B,EAAiD,CAAjD,EAAoDC,UAApD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KApoBU;;AAsoBX,wCAAoC,oCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY6B,MAAZ,GAAqB1B,KAArB,CAA2B,gBAAOC,QAAP,CAAgB,GAAhB,CAA3B,EAAiD,CAAjD,EAAoDC,UAApD,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAR,aAAKD,IAAL;AACH,KA/oBU;;AAipBX,2CAAuC,uCAASC,IAAT,EAAe;AAClDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACK6B,MADL,GAEK1B,KAFL,CAEW,gBAAOC,QAAP,CAAgB,SAAhB,CAFX,EAEuC,CAFvC,EAGKC,UAHL,EADJ,EAKI,IALJ,EAMI,qBANJ;AAQAR,aAAKD,IAAL;AACH,KA7pBU;;AA+pBX,wDAAoD,6CAASC,IAAT,EAAe;AAC/DA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACK6B,MADL,GAEK1B,KAFL,CAEW,gBAAOC,QAAP,CAAgB,SAAhB,CAFX,EAEuC,CAFvC,EAGKE,KAHL,CAGWsB,KAHX,EADJ,EAKI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CALJ,EAMI,qBANJ;AAQA/B,aAAKD,IAAL;AACH,KA3qBU;;AA6qBX,sCAAkC,kCAASC,IAAT,EAAe;AAC7CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EAAY6B,MAAZ,GAAqB1B,KAArB,CAA2B,gBAAOC,QAAP,CAAgB,KAAhB,CAA3B,EAAmD,CAAnD,EAAsDE,KAAtD,CAA4DsB,KAA5D,EADJ,EAEI,EAFJ,EAGI,qBAHJ;AAKA/B,aAAKD,IAAL;AACH,KAtrBU;;AAwrBX,yCAAqC,iCAASC,IAAT,EAAe;AAChDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEa,OAAF,CAAU,GAAV,EACKD,MADL,GAEK1B,KAFL,CAEW,gBAAOC,QAAP,CAAgB,MAAhB,CAFX,EAEoC,CAFpC,EAGKE,KAHL,CAGWsB,KAHX,EADJ,EAKI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CALJ,EAMI,qBANJ;AAQA/B,aAAKD,IAAL;AACH,KApsBU;;AAssBX,mDAA+C,qCAASC,IAAT,EAAe;AAC1DA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACK6B,MADL,GAEKlB,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,EAAY6B,MAAZ,EAFV,EAGK5B,GAHL,CAGS;AAAA,mBAAK8B,EAAE9B,GAAF,CAAM;AAAA,uBAAK+B,EAAEJ,KAAF,EAAL;AAAA,aAAN,CAAL;AAAA,SAHT,EAIKzB,KAJL,CAIW,gBAAOC,QAAP,CAAgB,MAAhB,CAJX,EAIoC,CAJpC,EAIuCE,KAL3C,EAMI,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,EAAkB,CAAC,GAAD,CAAlB,CANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KAntBU;;AAqtBX,gDAA4C,kCAASC,IAAT,EAAe;AACvDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKoB,SAAL,CACI,UAAEjB,IAAF,CAAO,GAAP,EACK2B,GADL,GAEKhB,IAFL,CAEU,UAAEX,IAAF,CAAO,GAAP,EAAY2B,GAAZ,EAFV,EAGK1B,GAHL,CAGS;AAAA,mBAAK8B,EAAE9B,GAAF,CAAM;AAAA,uBAAK+B,EAAEJ,KAAF,EAAL;AAAA,aAAN,CAAL;AAAA,SAHT,EAIKzB,KAJL,CAIW,gBAAOC,QAAP,CAAgB,MAAhB,CAJX,EAIoC,CAJpC,EAIuCE,KAL3C,EAMI,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,EAAkB,CAAC,GAAD,CAAlB,CANJ,EAOI,qBAPJ;AASAT,aAAKD,IAAL;AACH,KAluBU;;AAouBX,0CAAsC,qCAASC,IAAT,EAAe;AACjDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA,YAAMmC,WAAWC,QAAQC,GAAzB;AACA,YAAIC,aAAa,KAAjB;;AAEAF,gBAAQC,GAAR,GAAc,YAAW;AACrBC,yBAAa,IAAb;AACH,SAFD;;AAIA;AACA,kBAAEpC,IAAF,CAAO,GAAP,EAAYqC,KAAZ,CAAkB,OAAlB,EAA2BR,MAA3B,GAAoC1B,KAApC,CAA0C,gBAAOC,QAAP,CAAgB,KAAhB,CAA1C,EAAkE,CAAlE;;AAEA8B,gBAAQC,GAAR,GAAcF,QAAd;AACApC,aAAKoB,SAAL,CAAemB,UAAf,EAA2B,IAA3B,EAAiC,0BAAjC;AACAvC,aAAKD,IAAL;AACH,KApvBU;;AAsvBX,sDAAkD,+CAASC,IAAT,EAAe;AAC7DA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA,YAAMmC,WAAWC,QAAQC,GAAzB;AACA,YAAIC,aAAa,KAAjB;;AAEAF,gBAAQC,GAAR,GAAc,YAAW;AACrBC,yBAAa,IAAb;AACH,SAFD;;AAIA;AACA,kBAAEpC,IAAF,CAAO,GAAP,EACKqC,KADL,CACW,OADX,EACoB,KADpB,EAEKR,MAFL,GAGK1B,KAHL,CAGW,gBAAOC,QAAP,CAAgB,KAAhB,CAHX,EAGmC,CAHnC;;AAKA8B,gBAAQC,GAAR,GAAcF,QAAd;AACApC,aAAKoB,SAAL,CAAemB,UAAf,EAA2B,IAA3B,EAAiC,0BAAjC;AACAvC,aAAKD,IAAL;AACH,KAzwBU;;AA2wBX,8CAA0C,wCAASC,IAAT,EAAe;AACrDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA,YAAMmC,WAAWC,QAAQC,GAAzB;AACA,YAAIC,aAAa,KAAjB;;AAEAF,gBAAQC,GAAR,GAAc,YAAW;AACrBC,yBAAa,IAAb;AACH,SAFD;;AAIA;AACA,kBAAEpC,IAAF,CAAO,GAAP,EAAYqC,KAAZ,CAAkB,OAAlB,EAA2BR,MAA3B,GAAoC1B,KAApC,CAA0C,gBAAOC,QAAP,CAAgB,MAAhB,CAA1C,EAAmE,CAAnE;;AAEA8B,gBAAQC,GAAR,GAAcF,QAAd;AACApC,aAAKoB,SAAL,CAAemB,UAAf,EAA2B,KAA3B,EAAkC,0BAAlC;AACAvC,aAAKD,IAAL;AACH;AA3xBU,C","file":"parser_core_test.js","sourcesContent":["import stream from '../../lib/stream/index';\r\nimport {F, C, N} from '../../lib/parsec/index';\r\n\r\n/*\r\n  ======== A Handy Little Nodeunit Reference ========\r\n  https://github.com/caolan/nodeunit\r\n\r\n  Test methods:\r\n    test.expect(numAssertions)\r\n    test.done()\r\n  Test assertions:\r\n    test.ok(value, [message])\r\n    test.equal(actual, expected, [message])\r\n    test.notEqual(actual, expected, [message])\r\n    test.deepEqual(actual, expected, [message])\r\n    test.notDeepEqual(actual, expected, [message])\r\n    test.strictEqual(actual, expected, [message])\r\n    test.notStrictEqual(actual, expected, [message])\r\n    test.throws(block, [error], [message])\r\n    test.doesNotThrow(block, [error], [message])\r\n    test.ifError(value)\r\n*/\r\n\r\nexport default {\r\n    setUp: function(done) {\r\n        done();\r\n    },\r\n\r\n    'expect (map) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .map(function(a) {\r\n                    return a + 'b';\r\n                })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (map) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .map(function(a) {\r\n                    return a + 'b';\r\n                })\r\n                .parse(stream.ofString('b'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (map) to be return ab': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .map(function(a) {\r\n                    return a + 'b';\r\n                })\r\n                .parse(stream.ofString('a'), 0).value,\r\n            'ab',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (map) to be return 5x8': function(test) {\r\n        test.expect(1);\r\n\r\n        const st = stream.ofString('5x8');\r\n        const combinator = N.integer\r\n            .thenLeft(C.char('x'))\r\n            .then(N.integer)\r\n            .map(values => values[0] * values[1]);\r\n\r\n        test.equal(combinator.parse(st).value, 40, 'should be accepted.');\r\n        test.done();\r\n    },\r\n\r\n    'expect (flatmap) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .flatmap(function() {\r\n                    return F.returns('b');\r\n                })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (flatmap) to be rejected ': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .flatmap(function() {\r\n                    return F.returns('b');\r\n                })\r\n                .parse(stream.ofString('b'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (flatmap) to be return ab': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .flatmap(function() {\r\n                    return C.char('b');\r\n                })\r\n                .parse(stream.ofString('ab'), 0).value,\r\n            'b',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (filter) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .filter(function(a) {\r\n                    return a === 'a';\r\n                })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (filter) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .filter(function(a) {\r\n                    return a === 'b';\r\n                })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (match) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').match('a').parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (match) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').match('b').parse(stream.ofString('a'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b'))\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) left to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b'))\r\n                .parse(stream.ofString('cb'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) right to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b'))\r\n                .parse(stream.ofString('ac'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) to return [a,b]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        // const stream = stream.ofString(\"ab\");\r\n        test.deepEqual(\r\n            C.char('a').then(C.char('b')).parse(stream.ofString('ab'), 0).value,\r\n            ['a', 'b'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) to return [a,b,d]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        // const stream = stream.ofString(\"ab\");\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .then(C.char('b').then(C.char('c').drop()).then(C.char('d')))\r\n                .parse(stream.ofString('abcd'), 0).value,\r\n            ['a', 'b', 'd'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) to be associative ': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        // const stream = stream.ofString(\"ab\");\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .then(C.char('b'))\r\n                .then(C.char('c').drop())\r\n                .then(C.char('d'))\r\n                .parse(stream.ofString('abcd'), 0).value,\r\n            ['a', 'b', 'd'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then) to be replaced by concat ': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        // const stream = stream.ofString(\"ab\");\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .concat(C.char('b'))\r\n                .then(C.char('c').drop())\r\n                .concat(C.char('d'))\r\n                .parse(stream.ofString('abcd'), 0).value,\r\n            ['a', 'b', 'd'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenLeft) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenLeft(C.char('b'))\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenLeft) to return a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').thenLeft(C.char('b')).parse(stream.ofString('ab'), 0)\r\n                .value,\r\n            'a',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenLeft) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenLeft(C.char('b'))\r\n                .parse(stream.ofString('b'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenRight) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenRight(C.char('b'))\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenRight) to return a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').thenRight(C.char('b')).parse(stream.ofString('ab'), 0)\r\n                .value,\r\n            'b',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenRight) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenRight(C.char('b'))\r\n                .parse(stream.ofString('b'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (drop/then) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .drop()\r\n                .then(C.char('b'))\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (drop/then) to be return b': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').drop().then(C.char('b')).parse(stream.ofString('ab'), 0)\r\n                .value,\r\n            'b',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then/drop) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b').drop())\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (drop/then) to be return a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').then(C.char('b').drop()).parse(stream.ofString('ab'), 0)\r\n                .value,\r\n            'a',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenReturns) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenReturns('b')\r\n                .parse(stream.ofString('ab'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenReturns) to return b': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').thenReturns('b').parse(stream.ofString('ab'), 0).value,\r\n            'b',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenReturns) not to eat char': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .thenReturns('X')\r\n                .then(C.char('b'))\r\n                .parse(stream.ofString('ab'), 0).value,\r\n            ['X', 'b'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (thenReturns) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .thenReturns('b')\r\n                .parse(stream.ofString('b'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (or) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .or(C.char('b'))\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (or) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .or(C.char('b'))\r\n                .parse(stream.ofString('c'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (or) LL(1) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b'))\r\n                .or(C.char('a'))\r\n                .parse(stream.ofString('ac'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (or) to return a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').or(C.char('b')).parse(stream.ofString('a'), 0).value,\r\n            'a',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (or) to return b': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').or(C.char('b')).parse(stream.ofString('b'), 0).value,\r\n            'b',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then.or) left to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b').or(C.char('c')))\r\n                .parse(stream.ofString('ad'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (then.or) left to be consumed': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a')\r\n                .then(C.char('b').or(C.char('c')))\r\n                .parse(stream.ofString('ad'), 0).consumed,\r\n            true,\r\n            'should be consumed.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (opt) some to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').opt().parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (opt) some to return some a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').opt().parse(stream.ofString('a'), 0).value.get(),\r\n            'a',\r\n            'should be a.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (opt) none to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').opt().parse(stream.ofString('b'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (opt) none to return none': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').opt().parse(stream.ofString('b'), 0).value.isPresent(),\r\n            false,\r\n            'should be accepted but none.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (rep) to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').rep().parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (rep) to rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').rep().parse(stream.ofString('b'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (rep) mutiple to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').rep().parse(stream.ofString('aaaabbb'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (rep) mutiple to return [a,a,a,a]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .rep()\r\n                .parse(stream.ofString('aaaabbb'), 0)\r\n                .value.array(),\r\n            ['a', 'a', 'a', 'a'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').optrep().parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) none to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').optrep().parse(stream.ofString('b'), 0).isAccepted(),\r\n            true,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) mutiple to accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .optrep()\r\n                .parse(stream.ofString('aaaabbb'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) mutiple to return some [a,a,a,a]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a')\r\n                .optrep()\r\n                .parse(stream.ofString('aaaabbb'), 0)\r\n                .value.array(),\r\n            ['a', 'a', 'a', 'a'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) to return none': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('a').optrep().parse(stream.ofString('bbb'), 0).value.array(),\r\n            [],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (optrep) to return [b,b,b]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.notChar('a')\r\n                .optrep()\r\n                .parse(stream.ofString('bbba'), 0)\r\n                .value.array(),\r\n            ['b', 'b', 'b'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect two (optrep) to return [[b,b,b],[a]]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('b')\r\n                .optrep()\r\n                .then(C.char('a').optrep())\r\n                .map(r => r.map(e => e.array()))\r\n                .parse(stream.ofString('bbba'), 0).value,\r\n            [['b', 'b', 'b'], ['a']],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect two (rep) to return [[b,b,b],[a]]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            C.char('b')\r\n                .rep()\r\n                .then(C.char('a').rep())\r\n                .map(r => r.map(e => e.array()))\r\n                .parse(stream.ofString('bbba'), 0).value,\r\n            [['b', 'b', 'b'], ['a']],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect debug() to make side effect': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const original = console.log;\r\n        let sideEffect = false;\r\n\r\n        console.log = function() {\r\n            sideEffect = true;\r\n        };\r\n\r\n        // side effect action\r\n        C.char('a').debug('found').optrep().parse(stream.ofString('aaa'), 0);\r\n\r\n        console.log = original;\r\n        test.deepEqual(sideEffect, true, 'should make side effect.');\r\n        test.done();\r\n    },\r\n\r\n    'expect debug(param, false) to make side effect': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const original = console.log;\r\n        let sideEffect = false;\r\n\r\n        console.log = function() {\r\n            sideEffect = true;\r\n        };\r\n\r\n        // side effect action : will hide the details\r\n        C.char('a')\r\n            .debug('found', false)\r\n            .optrep()\r\n            .parse(stream.ofString('aaa'), 0);\r\n\r\n        console.log = original;\r\n        test.deepEqual(sideEffect, true, 'should make side effect.');\r\n        test.done();\r\n    },\r\n\r\n    'expect (debug) to not make side effect': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const original = console.log;\r\n        let sideEffect = false;\r\n\r\n        console.log = function() {\r\n            sideEffect = true;\r\n        };\r\n\r\n        // side effect action\r\n        C.char('a').debug('found').optrep().parse(stream.ofString('xxxx'), 0);\r\n\r\n        console.log = original;\r\n        test.deepEqual(sideEffect, false, 'should make side effect.');\r\n        test.done();\r\n    },\r\n};\r\n"]}