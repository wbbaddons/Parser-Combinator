{"version":3,"sources":["../../../src/test/parsec/parser_extensions_test.js"],"names":["setUp","done","test","expect","ok","returns","parse","ofString","isAccepted","equal","value","error","lazy","v","eos","satisfy","offset","try","digit","lowerCase","upperCase","letter","parsing","letters","thenLeft","deepEqual","then","notDeepEqual","char","throws","notChar","charNotIn","charIn","string","notString","numberLiteral","charLiteral","stringLiteral","any","occurrence","array","expected","sequence","rep","map","join","thenReturns","subStream","subString"],"mappings":"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","file":"parser_extensions_test.js","sourcesContent":["import stream from '../../lib/stream/index';\r\nimport {F, C, N} from '../../lib/parsec/index';\r\n\r\n/*\r\n ======== A Handy Little Nodeunit Reference ========\r\n https://github.com/caolan/nodeunit\r\n\r\n Test methods:\r\n test.expect(numAssertions)\r\n test.done()\r\n Test assertions:\r\n test.ok(value, [message])\r\n test.equal(actual, expected, [message])\r\n test.notEqual(actual, expected, [message])\r\n test.deepEqual(actual, expected, [message])\r\n test.notDeepEqual(actual, expected, [message])\r\n test.strictEqual(actual, expected, [message])\r\n test.notStrictEqual(actual, expected, [message])\r\n test.throws(block, [error], [message])\r\n test.doesNotThrow(block, [error], [message])\r\n test.ifError(value)\r\n */\r\n\r\nexport default {\r\n    setUp: function(done) {\r\n        done();\r\n    },\r\n\r\n    'expect (returns) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.ok(\r\n            F.returns().parse(stream.ofString(''), 0).isAccepted(),\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (returns) to return a given value': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.returns(123).parse(stream.ofString(''), 0).value,\r\n            123,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (returns) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.error.parse(stream.ofString(''), 0).isAccepted(),\r\n            false,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lazy) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.ok(\r\n            F.lazy(function() {\r\n                return F.returns();\r\n            })\r\n                .parse(stream.ofString(''), 0)\r\n                .isAccepted(),\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lazy) to return a given value': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.lazy(function() {\r\n                return F.returns(123);\r\n            }).parse(stream.ofString(''), 0).value,\r\n            123,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lazy) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.lazy(function() {\r\n                return F.error;\r\n            })\r\n                .parse(stream.ofString(''), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lazy) with a parameter to return a given value': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.lazy(\r\n                function(v) {\r\n                    return F.returns(v);\r\n                },\r\n                [123]\r\n            ).parse(stream.ofString(''), 0).value,\r\n            123,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (error) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.error.parse(stream.ofString(''), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (eos) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.eos.parse(stream.ofString(''), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (eos) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.eos.parse(stream.ofString('a'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (satisfy) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.satisfy(function(v) {\r\n                return v === 'a';\r\n            })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (satisfy) to be return the right value': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.satisfy(function(v) {\r\n                return v === 'a';\r\n            }).parse(stream.ofString('a'), 0).value,\r\n            'a',\r\n            'should be the right value.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (satisfy) to be return the right offset': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.satisfy(function(v) {\r\n                return v === 'a';\r\n            }).parse(stream.ofString('a'), 0).offset,\r\n            1,\r\n            'should be the right offset.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (satisfy) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.satisfy(function(v) {\r\n                return v === 'b';\r\n            })\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (doTry satisfy) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.try(\r\n                F.satisfy(function(v) {\r\n                    return v === 'a';\r\n                })\r\n            )\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (doTry satisfy) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.try(\r\n                F.satisfy(function(v) {\r\n                    return v === 'b';\r\n                })\r\n            )\r\n                .parse(stream.ofString('a'), 0)\r\n                .isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (digit) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.digit.parse(stream.ofString('1'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (digit) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.digit.parse(stream.ofString('a'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lowerCase) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.lowerCase.parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (lowerCase) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.lowerCase.parse(stream.ofString('A'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (upperCase) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.upperCase.parse(stream.ofString('A'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (upperCase) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.upperCase.parse(stream.ofString('z'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect upper (letter) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.letter.parse(stream.ofString('A'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect lower (letter) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.letter.parse(stream.ofString('z'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n    'expect space (letter) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.letter.parse(stream.ofString(' '), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect non (letter) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.letter.parse(stream.ofString('0'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (letters) to be accepted': function(test) {\r\n        test.expect(2);\r\n        // tests here\r\n        const parsing = C.letters\r\n            .thenLeft(F.eos)\r\n            .parse(stream.ofString('someLetters'), 0);\r\n        test.equal(parsing.isAccepted(), true, 'should be accepted.');\r\n        test.deepEqual(parsing.value, 'someLetters', 'should be equal.');\r\n        test.done();\r\n    },\r\n\r\n    'expect (letters) with space to be rejected': function(test) {\r\n        test.expect(2);\r\n        // tests here\r\n        const parsing = C.letters\r\n            .then(F.eos)\r\n            .parse(stream.ofString('some Letters'), 0);\r\n        test.equal(parsing.isAccepted(), false, 'should be rejected.');\r\n        test.notDeepEqual(parsing.value, 'some Letters', 'should be equal.');\r\n        test.done();\r\n    },\r\n\r\n    'expect (letters) with number to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const parsing = C.letters\r\n            .then(F.eos)\r\n            .parse(stream.ofString('some2Letters'), 0);\r\n        test.equal(parsing.isAccepted(), false, 'should be accepted.');\r\n        test.done();\r\n    },\r\n\r\n    'expect (letters) to return a string, not an array of letters': function(\r\n        test\r\n    ) {\r\n        test.expect(1);\r\n        // tests here\r\n        const parsing = C.letters\r\n            .thenLeft(F.eos)\r\n            .parse(stream.ofString('someLetters'), 0);\r\n        test.equal(parsing.value, 'someLetters', 'not a string');\r\n        test.done();\r\n    },\r\n\r\n    'expect (char) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (char) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.char('a').parse(stream.ofString('b'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (char) to be refused': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.throws(function() {\r\n            C.char('aa');\r\n        });\r\n        test.done();\r\n    },\r\n\r\n    'expect (notChar) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.notChar('a').parse(stream.ofString('b'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (notChar) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.notChar('a').parse(stream.ofString('a'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (notChar) to be refused': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.throws(function() {\r\n            C.notChar('aa');\r\n        });\r\n        test.done();\r\n    },\r\n\r\n    'expect (charNotIn) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charNotIn('a').parse(stream.ofString('b'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charNotIn) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charNotIn('a').parse(stream.ofString('a'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charIn) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charIn('a').parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charIn) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charIn('a').parse(stream.ofString('b'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (string) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.string('Hello').parse(stream.ofString('Hello'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (string) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.string('hello').parse(stream.ofString('hell'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (notString) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.notString('**').parse(stream.ofString('hello'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (notString) to be h': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.notString('**').parse(stream.ofString('hello'), 0).value,\r\n            'h',\r\n            'should be h.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (notString) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.notString('**').parse(stream.ofString('**hello'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (number) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral.parse(stream.ofString('123'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (number) to return 123': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral.parse(stream.ofString('123'), 0).value,\r\n            123,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect negative (number) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral.parse(stream.ofString('-123'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect negative (number) to return -123': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral.parse(stream.ofString('-123'), 0).value,\r\n            -123,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect float (number) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral\r\n                .parse(stream.ofString('123.34e-34'), 0)\r\n                .isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect float (number) to return 123.34e-34': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            N.numberLiteral.parse(stream.ofString('123.34e-34'), 0).value,\r\n            123.34e-34,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charLiteral) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charLiteral.parse(stream.ofString(\"'a'\"), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charLiteral) to return a': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charLiteral.parse(stream.ofString(\"'a'\"), 0).value,\r\n            'a',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charLiteral) quote to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charLiteral.parse(stream.ofString(\"'\\\\''\"), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (charLiteral) to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.charLiteral.parse(stream.ofString(\"''\"), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (stringLiteral) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.stringLiteral.parse(stream.ofString('\"a\"'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (stringLiteral) to return abc': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.stringLiteral.parse(stream.ofString('\"abc\"'), 0).value,\r\n            'abc',\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (stringLiteral) empty to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.stringLiteral.parse(stream.ofString('\"\"'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 1) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.any.occurrence(1).parse(stream.ofString('a'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 1) to return [a]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            F.any.occurrence(1).parse(stream.ofString('a'), 0).value.array(),\r\n            ['a'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 2) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.any.occurrence(1).parse(stream.ofString('aa'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 2) to return [a,a]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            F.any.occurrence(2).parse(stream.ofString('aa'), 0).value.array(),\r\n            ['a', 'a'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 3) to return [a,a,a]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            F.any.occurrence(3).parse(stream.ofString('aaa'), 0).value.array(),\r\n            ['a', 'a', 'a'],\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 0) to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            F.any.occurrence(0).parse(stream.ofString('aa'), 0).isAccepted(),\r\n            true,\r\n            'should be accepter.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'expect (occurence 0) to return []': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.deepEqual(\r\n            F.any.occurrence(0).parse(stream.ofString('aa'), 0).value.array(),\r\n            [],\r\n            'should be accepter.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    \"expect sequence ( '(',text(), ')' ) to return ['(', text, ')']\": function(\r\n        test\r\n    ) {\r\n        test.expect(1);\r\n        // tests here\r\n        const string = '(Hello)';\r\n        const expected = ['(', 'Hello', ')'];\r\n\r\n        const parsing = F.sequence(\r\n            C.char('('),\r\n            C.charNotIn(')').rep().map(v => v.join('')),\r\n            C.char(')')\r\n        ).parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value, expected, 'should be equal');\r\n        test.done();\r\n    },\r\n    \"expect sequence ( 2+2) to return [2,'+' ,2]\": function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const string = '2+2';\r\n        const expected = [2, '+', 2];\r\n\r\n        const parsing = F.sequence(\r\n            N.numberLiteral,\r\n            C.char('+'),\r\n            N.numberLiteral\r\n        ).parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value, expected, 'should be equal');\r\n        test.done();\r\n    },\r\n\r\n    \"expect chained then (2+2) to return [2,'+' ,2]\": function(test) {\r\n        // Main difference with sequence, is that a sequence element could be an array\r\n        test.expect(1);\r\n        // tests here\r\n        const string = '2+2';\r\n        const expected = [2, '+', 2];\r\n\r\n        const parsing = N.numberLiteral\r\n            .then(C.char('+'))\r\n            .then(N.numberLiteral)\r\n            .parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value, expected, 'should be equal');\r\n        test.done();\r\n    },\r\n\r\n    'expect chained then (2+2) to return []': function(test) {\r\n        // Main difference with sequence, is that a sequence element could be an array\r\n        test.expect(1);\r\n        // tests here\r\n        const string = '2+2';\r\n        const expected = [];\r\n\r\n        const parsing = N.numberLiteral\r\n            .then(C.char('+'))\r\n            .then(N.numberLiteral)\r\n            .thenReturns([])\r\n            .parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value, expected, 'should be equal');\r\n        test.done();\r\n    },\r\n\r\n    'export subStream(4) to return [h,e,l,l]': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const string = 'hello';\r\n        const expected = ['h', 'e', 'l', 'l'];\r\n\r\n        const parsing = F.subStream(4).parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value.array(), expected, 'should be equal');\r\n        test.done();\r\n    },\r\n\r\n    'export subString(4) to return hell': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        const string = 'hello';\r\n        const expected = 'hell';\r\n\r\n        const parsing = C.subString(4).parse(stream.ofString(string), 0);\r\n\r\n        test.deepEqual(parsing.value, expected, 'should be equal');\r\n        test.done();\r\n    },\r\n};\r\n"]}