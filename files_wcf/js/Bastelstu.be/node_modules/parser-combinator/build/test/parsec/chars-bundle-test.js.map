{"version":3,"sources":["../../../src/test/parsec/chars-bundle-test.js"],"names":["value","undefined","testParser","parser","string","myStream","ofString","parsing","parse","setUp","done","test","expect","equal","utf8Letter","isAccepted"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAIA,QAAQC,SAAZ;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC;AAChC,QAAIC,WAAW,gBAAOC,QAAP,CAAgBF,MAAhB,CAAf;AACA,QAAIG,UAAUJ,OAAOK,KAAP,CAAaH,QAAb,CAAd;;AAEAL,YAAQO,QAAQP,KAAhB;AACH;;kBAEc;AACXS,WAAO,eAASC,IAAT,EAAe;AAClBA;AACH,KAHU;;AAKX,oCAAgC,kCAASC,IAAT,EAAe;AAC3CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,UAAF,CAAaN,KAAb,CAAmB,gBAAOF,QAAP,CAAgB,GAAhB,CAAnB,EAAyC,CAAzC,EAA4CS,UAA5C,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAJ,aAAKD,IAAL;AACH,KAdU;AAeX,qCAAiC,mCAASC,IAAT,EAAe;AAC5CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACA;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,UAAF,CAAaN,KAAb,CAAmB,gBAAOF,QAAP,CAAgB,GAAhB,CAAnB,EAAyC,CAAzC,EAA4CS,UAA5C,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAJ,aAAKE,KAAL,CACI,UAAEC,UAAF,CAAaN,KAAb,CAAmB,gBAAOF,QAAP,CAAgB,GAAhB,CAAnB,EAAyC,CAAzC,EAA4CS,UAA5C,EADJ,EAEI,IAFJ,EAGI,qBAHJ;AAKAJ,aAAKD,IAAL;AACH,KA/BU;AAgCX,kCAA8B,gCAASC,IAAT,EAAe;AACzCA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,UAAF,CAAaN,KAAb,CAAmB,gBAAOF,QAAP,CAAgB,GAAhB,CAAnB,EAAyC,CAAzC,EAA4CS,UAA5C,EADJ,EAEI,KAFJ,EAGI,qBAHJ;AAKAJ,aAAKD,IAAL;AACH,KAzCU;AA0CX,uCAAmC,mCAASC,IAAT,EAAe;AAC9CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,KAAL,CACI,UAAEC,UAAF,CAAaN,KAAb,CAAmB,gBAAOF,QAAP,CAAgB,EAAhB,CAAnB,EAAwC,CAAxC,EAA2CS,UAA3C,EADJ,EAEI,KAFJ,EAGI,qBAHJ;AAKAJ,aAAKD,IAAL;AACH;AAnDU,C","file":"chars-bundle-test.js","sourcesContent":["import stream from '../../lib/stream/index';\r\nimport {C} from '../../lib/parsec/index';\r\n\r\nlet value = undefined;\r\n\r\nfunction testParser(parser, string) {\r\n    let myStream = stream.ofString(string);\r\n    let parsing = parser.parse(myStream);\r\n\r\n    value = parsing.value;\r\n}\r\n\r\nexport default {\r\n    setUp: function(done) {\r\n        done();\r\n    },\r\n\r\n    'expect accent to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.utf8Letter.parse(stream.ofString('é'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n    'expect cyriliq to be accepted': function(test) {\r\n        test.expect(2);\r\n        // tests here\r\n        //Белград\r\n        //български\r\n        test.equal(\r\n            C.utf8Letter.parse(stream.ofString('Б'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.equal(\r\n            C.utf8Letter.parse(stream.ofString('б'), 0).isAccepted(),\r\n            true,\r\n            'should be accepted.'\r\n        );\r\n        test.done();\r\n    },\r\n    'expect dash to be rejected': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.utf8Letter.parse(stream.ofString('-'), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n    'expect \"nothing\" to be accepted': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            C.utf8Letter.parse(stream.ofString(''), 0).isAccepted(),\r\n            false,\r\n            'should be rejected.'\r\n        );\r\n        test.done();\r\n    },\r\n};\r\n"]}