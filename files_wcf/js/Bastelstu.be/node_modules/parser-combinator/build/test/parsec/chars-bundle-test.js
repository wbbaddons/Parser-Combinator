'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _index = require('../../lib/stream/index');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('../../lib/parsec/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var value = undefined;

function testParser(parser, string) {
    var myStream = _index2.default.ofString(string);
    var parsing = parser.parse(myStream);

    value = parsing.value;
}

exports.default = {
    setUp: function setUp(done) {
        done();
    },

    'expect accent to be accepted': function expectAccentToBeAccepted(test) {
        test.expect(1);
        // tests here
        test.equal(_index3.C.utf8Letter.parse(_index2.default.ofString('é'), 0).isAccepted(), true, 'should be accepted.');
        test.done();
    },
    'expect cyriliq to be accepted': function expectCyriliqToBeAccepted(test) {
        test.expect(2);
        // tests here
        //Белград
        //български
        test.equal(_index3.C.utf8Letter.parse(_index2.default.ofString('Б'), 0).isAccepted(), true, 'should be accepted.');
        test.equal(_index3.C.utf8Letter.parse(_index2.default.ofString('б'), 0).isAccepted(), true, 'should be accepted.');
        test.done();
    },
    'expect dash to be rejected': function expectDashToBeRejected(test) {
        test.expect(1);
        // tests here
        test.equal(_index3.C.utf8Letter.parse(_index2.default.ofString('-'), 0).isAccepted(), false, 'should be rejected.');
        test.done();
    },
    'expect "nothing" to be accepted': function expectNothingToBeAccepted(test) {
        test.expect(1);
        // tests here
        test.equal(_index3.C.utf8Letter.parse(_index2.default.ofString(''), 0).isAccepted(), false, 'should be rejected.');
        test.done();
    }
};
//# sourceMappingURL=chars-bundle-test.js.map