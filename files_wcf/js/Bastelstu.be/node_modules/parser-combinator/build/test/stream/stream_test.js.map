{"version":3,"sources":["../../../src/test/stream/stream_test.js"],"names":["setUp","done","test","expect","ok","ofString","endOfStream","equal","get","isSuccess","length","charAt","Error"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;kBAoBe;AACXA,WAAO,eAASC,IAAT,EAAe;AAClBA;AACH,KAHU;;AAKX,oCAAgC,mCAASC,IAAT,EAAe;AAC3CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,EAAL,CAAQ,gBAAOC,QAAP,CAAgB,EAAhB,EAAoBC,WAApB,CAAgC,CAAhC,CAAR,EAA4C,wBAA5C;AACAJ,aAAKD,IAAL;AACH,KAVU;;AAYX,wCAAoC,sCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKE,EAAL,CAAQ,gBAAOC,QAAP,CAAgB,GAAhB,EAAqBC,WAArB,CAAiC,CAAjC,CAAR,EAA6C,wBAA7C;AACAJ,aAAKD,IAAL;AACH,KAjBU;;AAmBX,2CAAuC,wCAASC,IAAT,EAAe;AAClDA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKK,KAAL,CACI,gBAAOF,QAAP,CAAgB,GAAhB,EAAqBC,WAArB,CAAiC,CAAjC,CADJ,EAEI,KAFJ,EAGI,wBAHJ;AAKAJ,aAAKD,IAAL;AACH,KA5BU;;AA8BX,uBAAmB,uBAASC,IAAT,EAAe;AAC9BA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKK,KAAL,CACI,gBAAOF,QAAP,CAAgB,GAAhB,EAAqBG,GAArB,CAAyB,CAAzB,EAA4BC,SAA5B,EADJ,EAEI,IAFJ,EAGI,sBAHJ;AAKAP,aAAKD,IAAL;AACH,KAvCU;;AAyCX,oCAAgC,iCAASC,IAAT,EAAe;AAC3CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKK,KAAL,CACI,gBAAOF,QAAP,CAAgB,GAAhB,EAAqBG,GAArB,CAAyB,CAAzB,EAA4BC,SAA5B,EADJ,EAEI,KAFJ,EAGI,sBAHJ;AAKAP,aAAKD,IAAL;AACH,KAlDU;;AAoDX,wCAAoC,qCAASC,IAAT,EAAe;AAC/CA,aAAKC,MAAL,CAAY,CAAZ;AACA;AACAD,aAAKK,KAAL,CACI,gBACKF,QADL,CACc;AACNK,oBAAQ,CADF;AAENC,oBAAQ,kBAAW;AACf,sBAAM,IAAIC,KAAJ,EAAN;AACH;AAJK,SADd,EAOKJ,GAPL,CAOS,CAPT,EAQKC,SARL,EADJ,EAUI,KAVJ,EAWI,sBAXJ;AAaAP,aAAKD,IAAL;AACH;AArEU,C","file":"stream_test.js","sourcesContent":["import stream from '../../lib/stream/index';\r\n\r\n/*\r\n  ======== A Handy Little Nodeunit Reference ========\r\n  https://github.com/caolan/nodeunit\r\n\r\n  Test methods:\r\n    test.expect(numAssertions)\r\n    test.done()\r\n  Test assertions:\r\n    test.ok(value, [message])\r\n    test.equal(actual, expected, [message])\r\n    test.notEqual(actual, expected, [message])\r\n    test.deepEqual(actual, expected, [message])\r\n    test.notDeepEqual(actual, expected, [message])\r\n    test.strictEqual(actual, expected, [message])\r\n    test.notStrictEqual(actual, expected, [message])\r\n    test.throws(block, [error], [message])\r\n    test.doesNotThrow(block, [error], [message])\r\n    test.ifError(value)\r\n*/\r\n\r\nexport default {\r\n    setUp: function(done) {\r\n        done();\r\n    },\r\n\r\n    'endOfStream for empty stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.ok(stream.ofString('').endOfStream(0), 'should be endOfStream.');\r\n        test.done();\r\n    },\r\n\r\n    'endOfStream for non empty stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.ok(stream.ofString('1').endOfStream(1), 'should be endOfStream.');\r\n        test.done();\r\n    },\r\n\r\n    'no endOfStream for non empty stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            stream.ofString('1').endOfStream(0),\r\n            false,\r\n            'should be endOfStream.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'get from stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            stream.ofString('1').get(0).isSuccess(),\r\n            true,\r\n            'should be a success.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'do not get from empty stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            stream.ofString('1').get(1).isSuccess(),\r\n            false,\r\n            'should be a failure.'\r\n        );\r\n        test.done();\r\n    },\r\n\r\n    'do not get from erroneous stream': function(test) {\r\n        test.expect(1);\r\n        // tests here\r\n        test.equal(\r\n            stream\r\n                .ofString({\r\n                    length: 1,\r\n                    charAt: function() {\r\n                        throw new Error();\r\n                    },\r\n                })\r\n                .get(0)\r\n                .isSuccess(),\r\n            false,\r\n            'should be a failure.'\r\n        );\r\n        test.done();\r\n    },\r\n};\r\n"]}