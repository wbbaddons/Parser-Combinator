{"version":3,"sources":["../../../src/lib/stream/bufferedstream.js"],"names":["BufferedStream","source","cache","index","location","endOfStream","self","get","factory"],"mappings":";;;;;;;;AAOA;;;;;;;;;;+eAPA;;;;;;;;;AASA;;;IAGMA,c;;;AACF,4BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB,cAAKA,MAAL,GAAcA,MAAd;AACA,cAAKC,KAAL,GAAa,EAAb;AAHgB;AAInB;;;;iCAEQC,K,EAAO;AACZ,mBAAO,KAAKF,MAAL,CAAYG,QAAZ,CAAqBD,KAArB,CAAP;AACH;;AAED;;;;oCACYA,K,EAAO;AACf,mBAAO,KAAKF,MAAL,CAAYI,WAAZ,CAAwBF,KAAxB,CAAP;AACH;;AAED;;;;4BACIA,K,EAAO;AACP,gBAAIG,OAAO,IAAX;;AAEA,gBAAI,CAACA,KAAKJ,KAAL,CAAWC,KAAX,CAAL,EAAwB;AACpBG,qBAAKJ,KAAL,CAAWC,KAAX,IAAoBG,KAAKL,MAAL,CAAYM,GAAZ,CAAgBJ,KAAhB,CAApB;AACH;;AAED,mBAAOG,KAAKJ,KAAL,CAAWC,KAAX,CAAP;AACH;;;;;;AAGL,SAASK,OAAT,CAAiBP,MAAjB,EAAyB;AACrB,WAAO,IAAID,cAAJ,CAAmBC,MAAnB,CAAP;AACH;;kBAEcO,O","file":"bufferedstream.js","sourcesContent":["/*\n * Parsec\n * https://github.com/d-plaindoux/parsec\n *\n * Copyright (c) 2016 Didier Plaindoux\n * Licensed under the LGPL2 license.\n */\nimport Stream from './stream';\n\n/**\n * Buffered stream class\n */\nclass BufferedStream extends Stream {\n    constructor(source) {\n        super();\n        this.source = source;\n        this.cache = {};\n    }\n\n    location(index) {\n        return this.source.location(index);\n    }\n\n    // BufferedStream 'a => unit -> boolean\n    endOfStream(index) {\n        return this.source.endOfStream(index);\n    }\n\n    // override, BufferedStream 'a => number -> Try 'a\n    get(index) {\n        var self = this;\n\n        if (!self.cache[index]) {\n            self.cache[index] = self.source.get(index);\n        }\n\n        return self.cache[index];\n    }\n}\n\nfunction factory(source) {\n    return new BufferedStream(source);\n}\n\nexport default factory;\n"]}