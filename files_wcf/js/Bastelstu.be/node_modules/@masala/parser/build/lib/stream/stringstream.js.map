{"version":3,"sources":["../../../src/lib/stream/stringstream.js"],"names":["StringStream","source","index","length","charAt","factory"],"mappings":";;;;;;;;AAOA;;;;;;;;;;+eAPA;;;;;;;;;AASA;;;IAGMA,Y;;;AACF,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB,cAAKA,MAAL,GAAcA,MAAd;AAFgB;AAGnB;;AAED;;;;;oCACYC,K,EAAO;AACf,mBAAO,KAAKD,MAAL,CAAYE,MAAZ,IAAsBD,KAA7B;AACH;;AAED;;;;kCACUA,K,EAAO;AACb,mBAAO,KAAKD,MAAL,CAAYG,MAAZ,CAAmBF,KAAnB,CAAP;AACH;;;;;;AAGL,SAASG,OAAT,CAAiBJ,MAAjB,EAAyB;AACrB,WAAO,IAAID,YAAJ,CAAiBC,MAAjB,CAAP;AACH;;kBAEcI,O","file":"stringstream.js","sourcesContent":["/*\n * Parsec\n * https://github.com/d-plaindoux/parsec\n *\n * Copyright (c) 2016 Didier Plaindoux\n * Licensed under the LGPL2 license.\n */\nimport Stream from './stream';\n\n/**\n * String stream class\n */\nclass StringStream extends Stream {\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n\n    // StringStream 'a => unit -> boolean\n    endOfStream(index) {\n        return this.source.length <= index;\n    }\n\n    // StringStream 'a => number -> 'a <+> error\n    unsafeGet(index) {\n        return this.source.charAt(index);\n    }\n}\n\nfunction factory(source) {\n    return new StringStream(source);\n}\n\nexport default factory;\n"]}