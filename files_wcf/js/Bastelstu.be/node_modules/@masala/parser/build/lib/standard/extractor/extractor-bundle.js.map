{"version":3,"sources":["../../../../src/lib/standard/extractor/extractor-bundle.js"],"names":["ExtractorBundle","options","spacesCharacters","wordSeparators","charIn","letter","moreSeparators","Object","assign","_handleOptions","last","_last","first","_first","console","warn","moreSeparator","rep","map","spaces","join","digit","parseInt","v","or","keepSpaces","try","word","_wordSeparators","item","array","parser","optrep","thenRight","thenLeft","stringIn","values","length"],"mappings":"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","file":"extractor-bundle.js","sourcesContent":["import {F, C, N} from '../../index';\n\n/**\n * Created by nicorama on 10/01/2017.\n */\nexport default class ExtractorBundle {\n    constructor(options) {\n        this.options = {\n            spacesCharacters: ' \\t\\n',\n            wordSeparators: C.charIn(' \\n:-,;'),\n            letter: C.letter,\n            moreSeparators: null,\n        };\n\n        Object.assign(this.options, this._handleOptions(options));\n\n        this.last = _last;\n        this.first = _first;\n    }\n\n    _handleOptions(options) {\n        if (options && typeof options === 'object') {\n            if (options.moreSeparators) {\n                if (options.wordSeparators) {\n                    console.warn(\n                        'Parsec WARNING: You cannot set both options ' +\n                            'wordSeparators & options.moreSeparator ; moreSeparator is ignored'\n                    );\n                    delete options.moreSeparator;\n                } else {\n                    options.wordSeparators = C.charIn(\n                        ' \\n:-,;' + options.moreSeparators\n                    );\n                }\n            }\n            return options;\n        } else {\n            return {};\n        }\n    }\n\n    spaces() {\n        return C.charIn(this.options.spacesCharacters)\n            .rep()\n            .map(spaces => spaces.join(''));\n    }\n\n    // returns a types number\n    number() {\n        return N.digit.rep().map(v => parseInt(v.join('')));\n    }\n\n    // returns a string representing numbers\n    digits() {\n        return N.digit.rep().map(v => v.join(''));\n    }\n\n    word() {\n        return this.options.letter.rep().map(v => v.join(''));\n    }\n\n    _wordSeparators() {\n        //TODO : replace second element by moreSeparators\n        return this.spaces().or(this.options.wordSeparators);\n    }\n\n    words(keepSpaces = true) {\n        if (keepSpaces) {\n            return F.try(this.word().or(this._wordSeparators()))\n                .rep()\n                .map(item => item.array());\n        } else {\n            const parser = F.try(\n                this._wordSeparators().optrep().thenRight(this.word())\n            );\n            return parser\n                .rep()\n                .thenLeft(this._wordSeparators().optrep())\n                .map(item => item.array());\n        }\n    }\n\n    wordsIn(array, keepSpaces = true) {\n        if (keepSpaces) {\n            return F.try(C.stringIn(array).or(this._wordSeparators()))\n                .rep()\n                .map(item => item.array());\n        } else {\n            const parser = F.try(\n                this._wordSeparators().optrep().thenRight(C.stringIn(array))\n            );\n            return parser\n                .rep()\n                .thenLeft(this._wordSeparators().optrep())\n                .map(item => item.array());\n        }\n    }\n}\n\nfunction _last(values) {\n    return values[values.length - 1];\n}\n\nfunction _first(values) {\n    return values[0];\n}\n"]}