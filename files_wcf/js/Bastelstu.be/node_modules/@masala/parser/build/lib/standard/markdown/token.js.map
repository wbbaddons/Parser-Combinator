{"version":3,"sources":["../../../../src/lib/standard/markdown/token.js"],"names":["blank","charIn","optrep","thenReturns","rawTextUntilChar","charList","allowVoid","charNotIn","map","chars","join","rep","rawTextUntil","stop","not","eol","char","or","string","lineFeed","then","linefeed","undefined","fourSpacesBlock","occurrence"],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA,SAASA,KAAT,GAAiB;AACb;AACA,WAAO,SAAEC,MAAF,CAAS,KAAT,EAAgBC,MAAhB,GAAyBC,WAAzB,CAAqC,EAArC,CAAP;AACH;;AAED;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAuD;AAAA,QAAnBC,SAAmB,uEAAP,KAAO;;AACnD,QAAIA,SAAJ,EAAe;AACX,eAAO,SAAEC,SAAF,CAAYF,QAAZ,EAAsBH,MAAtB,GAA+BM,GAA/B,CAAmC;AAAA,mBAASC,MAAMC,IAAN,CAAW,EAAX,CAAT;AAAA,SAAnC,CAAP;AACH,KAFD,MAEO;AACH,eAAO,SAAEH,SAAF,CAAYF,QAAZ,EAAsBM,GAAtB,GAA4BH,GAA5B,CAAgC;AAAA,mBAASC,MAAMC,IAAN,CAAW,EAAX,CAAT;AAAA,SAAhC,CAAP;AACH;AACJ;;AAED,SAASE,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,WAAO,SAAEC,GAAF,CAAMD,IAAN,EAAYF,GAAZ,GAAkBH,GAAlB,CAAsB;AAAA,eAASC,MAAMC,IAAN,CAAW,EAAX,CAAT;AAAA,KAAtB,CAAP;AACH;;AAED,SAASK,GAAT,GAAe;AACX,WAAO,SAAEC,IAAF,CAAO,IAAP,EAAaC,EAAb,CAAgB,SAAEC,MAAF,CAAS,MAAT,CAAhB,CAAP;AACH;;AAED;AACA,SAASC,QAAT,GAAoB;AAChB,WAAOJ,MAAMK,IAAN,CAAWpB,OAAX,EAAoBoB,IAApB,CAAyBL,KAAzB,EAAgCZ,WAAhC,CAA4C;AAC/CkB,kBAAUC;AADqC,KAA5C,CAAP;AAGH;;AAED;AACA,SAASC,eAAT,GAA2B;AACvB,WAAO,SAAEP,IAAF,CAAO,IAAP,EAAaC,EAAb,CAAgB,SAAEhB,MAAF,CAAS,OAAT,EAAoBuB,UAApB,CAA+B,CAA/B,CAAhB,CAAP;AACH;;kBAEc;AACXxB,gBADW;AAEXI,sCAFW;AAGXQ,8BAHW;AAIXG,YAJW;AAKXI,sBALW;AAMXI;AANW,C","file":"token.js","sourcesContent":["import {F, C} from '../../parsec/index';\n\n// resolve meanningles characters as an empty string\n// also accept an empty string\nfunction blank() {\n    // TODO: why not return C.charIn(' \\t').rep().thenReturns(' ');\n    return C.charIn(' \\t').optrep().thenReturns('');\n}\n\n//todo: escape characters\nfunction rawTextUntilChar(charList, allowVoid = false) {\n    if (allowVoid) {\n        return C.charNotIn(charList).optrep().map(chars => chars.join(''));\n    } else {\n        return C.charNotIn(charList).rep().map(chars => chars.join(''));\n    }\n}\n\nfunction rawTextUntil(stop) {\n    return F.not(stop).rep().map(chars => chars.join(''));\n}\n\nfunction eol() {\n    return C.char('\\n').or(C.string('\\r\\n'));\n}\n\n//A blank line in the code(that is 2 consecutive \\n) is a single end of line (lineFeed) in the rendition\nfunction lineFeed() {\n    return eol().then(blank()).then(eol()).thenReturns({\n        linefeed: undefined,\n    });\n}\n\n//accept 1 tab or 4 spaces. Space may be unbreakable\nfunction fourSpacesBlock() {\n    return C.char('\\t').or(C.charIn(' \\u00A0').occurrence(4));\n}\n\nexport default {\n    blank,\n    rawTextUntilChar,\n    rawTextUntil,\n    eol,\n    lineFeed,\n    fourSpacesBlock,\n};\n"]}