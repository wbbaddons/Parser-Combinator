{"version":3,"sources":["../../../src/lib/data/try.js"],"names":["Try","value","error","isSuccess","bindCall","isFailure","success","e","failure","f","Error"],"mappings":";;;;;;;;;;AAAA;;;;;;;;IAQMA,G;AACF,iBAAYC,KAAZ,EAAmBC,KAAnB,EAA0B;AAAA;;AACtB,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,KAAL,GAAaA,KAAb;AACH;;;;oCAEW;AACR,mBAAO,KAAKA,KAAL,KAAe,IAAtB;AACH;;;oCAEW;AACR,mBAAO,CAAC,KAAKC,SAAL,EAAR;AACH;;;kCAESC,Q,EAAU;AAChB,gBAAI,KAAKD,SAAL,EAAJ,EAAsB;AAClBC,yBAAS,KAAKH,KAAd;AACH;;AAED,mBAAO,IAAP;AACH;;;kCAESG,Q,EAAU;AAChB,gBAAI,KAAKC,SAAL,EAAJ,EAAsB;AAClBD,yBAAS,KAAKF,KAAd;AACH;;AAED,mBAAO,IAAP;AACH;;;4BAEGE,Q,EAAU;AACV,gBAAI,KAAKD,SAAL,EAAJ,EAAsB;AAClB,oBAAI;AACA,2BAAOG,QAAQF,SAAS,KAAKH,KAAd,CAAR,CAAP;AACH,iBAFD,CAEE,OAAOM,CAAP,EAAU;AACR,2BAAOC,QAAQD,CAAR,CAAP;AACH;AACJ,aAND,MAMO;AACH,uBAAO,IAAP;AACH;AACJ;;;gCAEOH,Q,EAAU;AACd,gBAAI,KAAKD,SAAL,EAAJ,EAAsB;AAClB,oBAAI;AACA,2BAAOC,SAAS,KAAKH,KAAd,CAAP;AACH,iBAFD,CAEE,OAAOM,CAAP,EAAU;AACR,2BAAOC,QAAQD,CAAR,CAAP;AACH;AACJ,aAND,MAMO;AACH,uBAAO,IAAP;AACH;AACJ;;;kCAES;AACN,mBAAO,KAAKN,KAAZ;AACH;;;kCAES;AACN,mBAAO,KAAKC,KAAZ;AACH;;;oCAEWD,K,EAAO;AACf,gBAAI,KAAKE,SAAL,EAAJ,EAAsB;AAClB,uBAAO,KAAKF,KAAZ;AACH,aAFD,MAEO;AACH,uBAAOA,KAAP;AACH;AACJ;;;wCAEeA,K,EAAO;AACnB,gBAAI,KAAKE,SAAL,EAAJ,EAAsB;AAClB,uBAAO,KAAKF,KAAZ;AACH,aAFD,MAEO;AACH,uBAAOA,MAAM,KAAKC,KAAX,CAAP;AACH;AACJ;;;+BACMO,C,EAAG;AACN,gBAAI,KAAKN,SAAL,EAAJ,EAAsB;AAClB,oBAAIM,EAAE,KAAKR,KAAP,CAAJ,EAAmB;AACf,2BAAO,IAAP;AACH,iBAFD,MAEO;AACH,2BAAOO,QAAQ,IAAIE,KAAJ,CAAU,gBAAV,CAAR,CAAP;AACH;AACJ;;AAED,mBAAO,IAAP;AACH;;;;;;AAGL,SAASJ,OAAT,CAAiBL,KAAjB,EAAwB;AACpB,WAAO,IAAID,GAAJ,CAAQC,KAAR,EAAe,IAAf,CAAP;AACH;;AAED,SAASO,OAAT,CAAiBN,KAAjB,EAAwB;AACpB,WAAO,IAAIF,GAAJ,CAAQ,IAAR,EAAcE,KAAd,CAAP;AACH;;kBAEc;AACXI,oBADW;AAEXE;AAFW,C","file":"try.js","sourcesContent":["/*\n * Parsec\n * https://github.com/d-plaindoux/parsec\n *\n * Copyright (c) 2016 Didier Plaindoux\n * Licensed under the LGPL2 license.\n */\n\nclass Try {\n    constructor(value, error) {\n        this.value = value;\n        this.error = error;\n    }\n\n    isSuccess() {\n        return this.error === null;\n    }\n\n    isFailure() {\n        return !this.isSuccess();\n    }\n\n    onSuccess(bindCall) {\n        if (this.isSuccess()) {\n            bindCall(this.value);\n        }\n\n        return this;\n    }\n\n    onFailure(bindCall) {\n        if (this.isFailure()) {\n            bindCall(this.error);\n        }\n\n        return this;\n    }\n\n    map(bindCall) {\n        if (this.isSuccess()) {\n            try {\n                return success(bindCall(this.value));\n            } catch (e) {\n                return failure(e);\n            }\n        } else {\n            return this;\n        }\n    }\n\n    flatMap(bindCall) {\n        if (this.isSuccess()) {\n            try {\n                return bindCall(this.value);\n            } catch (e) {\n                return failure(e);\n            }\n        } else {\n            return this;\n        }\n    }\n\n    success() {\n        return this.value;\n    }\n\n    failure() {\n        return this.error;\n    }\n\n    recoverWith(value) {\n        if (this.isSuccess()) {\n            return this.value;\n        } else {\n            return value;\n        }\n    }\n\n    lazyRecoverWith(value) {\n        if (this.isSuccess()) {\n            return this.value;\n        } else {\n            return value(this.error);\n        }\n    }\n    filter(f) {\n        if (this.isSuccess()) {\n            if (f(this.value)) {\n                return this;\n            } else {\n                return failure(new Error('invalid filter'));\n            }\n        }\n\n        return this;\n    }\n}\n\nfunction success(value) {\n    return new Try(value, null);\n}\n\nfunction failure(error) {\n    return new Try(null, error);\n}\n\nexport default {\n    success,\n    failure,\n};\n"]}