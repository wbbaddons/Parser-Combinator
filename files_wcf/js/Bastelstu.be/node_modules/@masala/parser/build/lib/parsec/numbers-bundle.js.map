{"version":3,"sources":["../../../src/lib/parsec/numbers-bundle.js"],"names":["numberLiteral","join","r","joinOrEmpty","map","orElse","digits","digit","rep","integer","charIn","opt","then","float","char","parseFloat","satisfy","v","parseInt","i"],"mappings":";;;;;;AAQA;;;;AACA;;;;;;AAEA;AAXA;;;;;;;;AAYA,SAASA,aAAT,GAAyB;AACrB;AACA,QAAIC,OAAO,SAAPA,IAAO;AAAA,eAAKC,EAAED,IAAF,CAAO,EAAP,CAAL;AAAA,KAAX;AAAA,QACIE,cAAc,SAAdA,WAAc;AAAA,eAAKD,EAAEE,GAAF,CAAMH,IAAN,EAAYI,MAAZ,CAAmB,EAAnB,CAAL;AAAA,KADlB;AAAA,QAEIC,SAASC,QAAQC,GAAR,GAAcJ,GAAd,CAAkBH,IAAlB,CAFb;AAAA,QAGIQ,UAAU,sBAAEC,MAAF,CAAS,IAAT,EACLC,GADK,GAELC,IAFK,CAEAN,MAFA,EAGLF,GAHK,CAGD;AAAA,eAAKF,EAAE,CAAF,EAAKG,MAAL,CAAY,EAAZ,IAAkBH,EAAE,CAAF,CAAvB;AAAA,KAHC,CAHd;AAAA,QAOIW,QAAQJ,QACHG,IADG,CACE,sBAAEE,IAAF,CAAO,GAAP,EAAYF,IAAZ,CAAiBN,MAAjB,EAAyBK,GAAzB,GAA+BP,GAA/B,CAAmCD,WAAnC,CADF,EAEHS,IAFG,CAEE,sBAAEF,MAAF,CAAS,IAAT,EAAeE,IAAf,CAAoBH,OAApB,EAA6BE,GAA7B,GAAmCP,GAAnC,CAAuCD,WAAvC,CAFF,EAGHC,GAHG,CAGC;AAAA,eAAKF,EAAE,CAAF,IAAOA,EAAE,CAAF,CAAP,GAAcA,EAAE,CAAF,CAAnB;AAAA,KAHD,CAPZ;;AAYA,WAAOW,MAAMT,GAAN,CAAU;AAAA,eAAKW,WAAWb,CAAX,EAAc,EAAd,CAAL;AAAA,KAAV,CAAP;AACH;;AAED;AACA,SAASK,KAAT,GAAiB;AACb,WAAO,qBAAES,OAAF,CAAU;AAAA,eAAK,OAAOC,CAAP,IAAYA,KAAK,GAAtB;AAAA,KAAV,CAAP;AACH;;AAED,SAASX,MAAT,GAAkB;AACd,WAAOC,QAAQC,GAAR,GAAcJ,GAAd,CAAkB;AAAA,eAAKa,EAAEhB,IAAF,CAAO,EAAP,CAAL;AAAA,KAAlB,CAAP;AACH;;AAED,SAASQ,OAAT,GAAmB;AACf;AACA,QAAIR,OAAO,SAAPA,IAAO;AAAA,eAAKC,EAAED,IAAF,CAAO,EAAP,CAAL;AAAA,KAAX;AAAA,QACIK,SAASC,QAAQC,GAAR,GAAcJ,GAAd,CAAkBH,IAAlB,CADb;AAAA,QAEIQ,UAAU,sBAAEC,MAAF,CAAS,IAAT,EACLC,GADK,GAELC,IAFK,CAEAN,MAFA,EAGLF,GAHK,CAGD;AAAA,eAAKF,EAAE,CAAF,EAAKG,MAAL,CAAY,EAAZ,IAAkBH,EAAE,CAAF,CAAvB;AAAA,KAHC,CAFd;;AAOA,WAAOO,QAAQL,GAAR,CAAY;AAAA,eAAKc,SAASC,CAAT,EAAY,EAAZ,CAAL;AAAA,KAAZ,CAAP;AACH;;kBAEc;AACXnB,mBAAeA,eADJ;AAEXO,WAAOA,OAFI;AAGXD,YAAQA,QAHG;AAIXG,aAASA;AAJE,C","file":"numbers-bundle.js","sourcesContent":["/*\n * Parsec\n * https://github.com/d-plaindoux/parsec\n *\n * Copyright (c) 2016 Didier Plaindoux\n * Licensed under the LGPL2 license.\n */\n\nimport C from './chars-bundle';\nimport F from './flow-bundle';\n\n// unit -> Parser number char\nfunction numberLiteral() {\n    // [-+]?\\d+([.]\\d+)?([eE][+-]?\\d+)?\n    var join = r => r.join(''),\n        joinOrEmpty = r => r.map(join).orElse(''),\n        digits = digit().rep().map(join),\n        integer = C.charIn('+-')\n            .opt()\n            .then(digits)\n            .map(r => r[0].orElse('') + r[1]),\n        float = integer\n            .then(C.char('.').then(digits).opt().map(joinOrEmpty))\n            .then(C.charIn('eE').then(integer).opt().map(joinOrEmpty))\n            .map(r => r[0] + r[1] + r[2]);\n\n    return float.map(r => parseFloat(r, 10));\n}\n\n// unit -> Parser char char\nfunction digit() {\n    return F.satisfy(v => '0' <= v && v <= '9');\n}\n\nfunction digits() {\n    return digit().rep().map(v => v.join(''));\n}\n\nfunction integer() {\n    // [-+]?\\d+([.]\\d+)?([eE][+-]?\\d+)?\n    var join = r => r.join(''),\n        digits = digit().rep().map(join),\n        integer = C.charIn('+-')\n            .opt()\n            .then(digits)\n            .map(r => r[0].orElse('') + r[1]);\n\n    return integer.map(i => parseInt(i, 10));\n}\n\nexport default {\n    numberLiteral: numberLiteral(),\n    digit: digit(),\n    digits: digits(),\n    integer: integer(),\n};\n"]}