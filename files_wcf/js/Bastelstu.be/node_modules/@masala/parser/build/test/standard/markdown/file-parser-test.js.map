{"version":3,"sources":["../../../../src/test/standard/markdown/file-parser-test.js"],"names":["value","undefined","expected","testFile","sample","sampleFileName","join","__dirname","expectedFileName","sampleContent","readFileSync","toString","sampleExpected","parsing","parse","ofString","JSON","setUp","done","test","deepEqual"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,QAAQC,SAAZ;AACA,IAAIC,WAAWD,SAAf;;AAEA,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,QAAMC,iBAAiB,eAAKC,IAAL,CAAUC,SAAV,eAAgCH,MAAhC,cAAvB;AACA,QAAMI,mBAAmB,eAAKF,IAAL,CACrBC,SADqB,eAEVH,MAFU,oBAAzB;AAIA,QAAIK,gBAAgB,aAAGC,YAAH,CAAgBL,cAAhB,EAAgCM,QAAhC,EAApB;AACA,QAAIC,iBAAiB,aAAGF,YAAH,CAAgBF,gBAAhB,EAAkCG,QAAlC,EAArB;;AAEA,QAAME,UAAU,yBAASC,KAAT,CAAe,gBAAOC,QAAP,CAAgBN,aAAhB,CAAf,CAAhB;AACAT,YAAQa,QAAQb,KAAhB;AACAE,eAAWc,KAAKF,KAAL,CAAWF,cAAX,CAAX;AACH;;kBAEc;AACXK,WAAO,eAASC,IAAT,EAAe;AAClBA;AACH,KAHU;;AAKX,yBAAqB,0BAASC,IAAT,EAAe;AAChChB,iBAAS,SAAT;AACAgB,aAAKC,SAAL,CAAepB,KAAf,EAAsBE,QAAtB,EAAgC,sCAAhC;AACAiB,aAAKD,IAAL;AACH,KATU;;AAWX,2BAAuB,4BAASC,IAAT,EAAe;AAClChB,iBAAS,WAAT;AACAgB,aAAKC,SAAL,CAAepB,KAAf,EAAsBE,QAAtB,EAAgC,sCAAhC;AACAiB,aAAKD,IAAL;AACH;AAfU,C","file":"file-parser-test.js","sourcesContent":["import mdParser from '../../../lib/standard/markdown/markdown-parser';\nimport stream from '../../../lib/stream/index';\nimport path from 'path';\nimport fs from 'fs';\n\nlet value = undefined;\nlet expected = undefined;\n\nfunction testFile(sample) {\n    const sampleFileName = path.join(__dirname, `samples/${sample}-test.md`);\n    const expectedFileName = path.join(\n        __dirname,\n        `samples/${sample}-expected.json`\n    );\n    var sampleContent = fs.readFileSync(sampleFileName).toString();\n    var sampleExpected = fs.readFileSync(expectedFileName).toString();\n\n    const parsing = mdParser.parse(stream.ofString(sampleContent));\n    value = parsing.value;\n    expected = JSON.parse(sampleExpected);\n}\n\nexport default {\n    setUp: function(done) {\n        done();\n    },\n\n    'parseTrivial test': function(test) {\n        testFile('trivial');\n        test.deepEqual(value, expected, 'bad value for file \"trivial-test.md\"');\n        test.done();\n    },\n\n    'parseParagraph test': function(test) {\n        testFile('paragraph');\n        test.deepEqual(value, expected, 'bad value for file \"trivial-test.md\"');\n        test.done();\n    },\n};\n"]}